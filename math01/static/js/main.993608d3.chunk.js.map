{"version":3,"sources":["utility.js","TableHead.jsx","FormParam.jsx","TableBody.jsx","App.js","serviceWorker.js","index.js"],"names":["getRandomInt","min","max","Math","floor","random","getTwoNumbers","op1","getTwoNumbersPlus","getTwoNumbersMinus","diff","sum01","a","b","getThreeNumbersPlus","c","op2","getThreeNumbersMinus","getThreeNumbers","res","getTwoNumbersMulti01","OPTIONS_TYPE","value","label","createExercises","noPerPage","numMax","funcExercise","tableContent01","i","push","getTypeFunc","type01","func01","getOp","op","TableHead","this","props","scope","howMany","class01","name","time","type","title","colSpan","className","title01","length","typeValue","typeLabel","getTitle","Row","Col","Component","schema","yup","of","shape","nullable","positive","integer","required","lessThan","copy","FormParam","onClickPrint","window","print","onClickSaveParams","values","localStorage","setItem","JSON","stringify","onClickCreate","Card","Header","Body","validationSchema","onSubmit","setSubmitting","initialValues","handleSubmit","handleChange","handleBlur","isValid","touched","errors","setFieldValue","Form","Group","as","controlId","md","Label","options","onChange","isMulti","error","Control","Feedback","isInvalid","Table","Button","variant","size","onClick","disabled","PureComponent","TableBody","getTd","obj01","key","getTableContent","exercises","tr01","parseInt","App","setState","noType","noEachType","arrayNoType","remainder","arrayExercises00","page","arrayExercises01","arrayExercises02","concat","arrayExercises","state","parse","getItem","Container","id","map","responsive","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.993608d3.chunk.js","sourcesContent":["// return an integer less than max + 1\nexport function getRandomInt(min, max) {\n  return Math.floor(min + Math.random() * (max + 1 - min));\n}\n\n// retrun {a: 5, b: 10, op1: 1 or 2]\nexport function getTwoNumbers(max) {\n  const op1 = getRandomInt(1, 2);\n  if (op1 === 1) return getTwoNumbersPlus(max);\n  else if (op1 === 2) return getTwoNumbersMinus(max);\n}\n\n// retrun {a: 5, b: 10, op1: 1]\nexport function getTwoNumbersPlus(max) {\n  const op1 = 1;\n  let diff;\n  if (max > 20) diff = 10;\n  else diff = 1;\n\n  const sum01 = getRandomInt(Math.floor(max / 2), max);\n  const a = getRandomInt(1, sum01 - diff);\n  const b = sum01 - a;\n  return {\n    a,\n    b,\n    op1,\n  };\n}\n\n// retrun {a: 5, b: 10, c: 25, op1: 1, op2: 1]\nexport function getThreeNumbersPlus(max) {\n  const op1 = 1;\n  const op2 = 1;\n\n  let diff;\n  if (max > 20) diff = 10;\n  else diff = 1;\n\n  const sum01 = getRandomInt(Math.floor(max / 2), max);\n  const a = getRandomInt(1, sum01 - diff);\n  const b = getRandomInt(1, sum01 - a - diff);\n  const c = sum01 - a - b;\n\n  return {\n    a,\n    b,\n    c,\n    op1,\n    op2,\n  };\n}\n\n// retrun {a: 5, b: 10, op1: 2]\nexport function getTwoNumbersMinus(max) {\n  const op1 = 2;\n  let diff;\n  if (max > 20) diff = 10;\n  else diff = 1;\n\n  const sum01 = getRandomInt(Math.floor(max / 2), max);\n  const a = getRandomInt(1, sum01 - diff);\n  const b = sum01 - a;\n\n  return {\n    a: sum01,\n    b,\n    op1,\n  };\n}\n\n// retrun {a: 5, b: 10, c: 25, op1: 1, op2: 1]\nexport function getThreeNumbersMinus(max) {\n  const op1 = 2;\n  const op2 = 2;\n\n  let diff;\n  if (max > 20) diff = 10;\n  else diff = 1;\n\n  const sum01 = getRandomInt(Math.floor(max / 2), max);\n  const a = getRandomInt(1, sum01 - diff);\n  const b = getRandomInt(1, sum01 - a - diff);\n  const c = sum01 - a - b;\n\n  return {\n    a: sum01,\n    b,\n    c,\n    op1,\n    op2,\n  };\n}\n\n// retrun {a: 5, b: 10, c: 25, op1: 1, op2: 2]\nexport function getThreeNumbers(max) {\n  const op1 = getRandomInt(1, 2);\n  const op2 = op1 === 1 ? 2 : 1;\n  let c;\n  let res;\n\n  if (op1 === 1) {\n    res = getTwoNumbersPlus(max);\n    const d = res.a + res.b;\n    c = getRandomInt(1, d - 1);\n  } else {\n    res = getThreeNumbersMinus(max);\n    const d = res.a - res.b;\n    c = getRandomInt(1, 100 - d);\n  }\n\n  return {\n    ...res,\n    c,\n    op2,\n  };\n}\n\n// retrun {a: 5, b: 10, op1: 1]\nexport function getTwoNumbersMulti01() {\n  const op1 = 3;\n  const a = getRandomInt(1, 9);\n  const b = getRandomInt(1, 9);\n\n  return {\n    a,\n    b,\n    op1,\n  };\n}\n\nexport const OPTIONS_TYPE = [\n  { value: \"0\", label: \"加减法\" },\n  { value: \"1\", label: \"加法\" },\n  { value: \"2\", label: \"减法\" },\n  { value: \"3\", label: \"连加\" },\n  { value: \"4\", label: \"连减\" },\n  { value: \"5\", label: \"加减混合\" },\n  { value: \"6\", label: \"乘法口诀\" },\n];\n\nexport const createExercises = (noPerPage, numMax, funcExercise) => {\n  let tableContent01 = [];\n  // exercise loop\n  for (let i = 0; i < noPerPage; i++) {\n    tableContent01.push(funcExercise(numMax));\n  }\n\n  return tableContent01;\n};\n\nexport const getTypeFunc = (type01) => {\n  let func01;\n  switch (type01) {\n    case \"0\": {\n      func01 = getTwoNumbers;\n      break;\n    }\n    case \"1\": {\n      func01 = getTwoNumbersPlus;\n      break;\n    }\n    case \"2\": {\n      func01 = getTwoNumbersMinus;\n      break;\n    }\n    case \"3\": {\n      func01 = getThreeNumbersPlus;\n      break;\n    }\n    case \"4\": {\n      func01 = getThreeNumbersMinus;\n      break;\n    }\n    case \"5\": {\n      func01 = getThreeNumbers;\n      break;\n    }\n    case \"6\": {\n      func01 = getTwoNumbersMulti01;\n      break;\n    }\n    default: {\n      func01 = getTwoNumbers;\n      break;\n    }\n  }\n  return func01;\n};\n\nexport const getTitle = (scope, type, title01, howMany) => {\n  if (!!title01) return title01;\n  let title = \"口算练习题\";\n\n  if (!type || type.length === 0 || type.length > 1) {\n    return \"口算练习题\";\n  }\n\n  let typeValue = type[0].value;\n  let typeLabel = type[0].label;\n  switch (typeValue) {\n    case \"6\":\n      title = `${typeLabel}口算练习${howMany}题`;\n      break;\n\n    default:\n      title = `${scope}以内${typeLabel}口算练习${howMany}题`;\n      break;\n  }\n  return title;\n};\n\nexport const getOp = (value) => {\n  // get op\n  let op;\n  switch (value) {\n    case 1:\n      op = \"+\";\n      break;\n    case 2:\n      op = \"-\";\n      break;\n    case 3:\n      op = \"x\";\n      break;\n    case 4:\n      op = \"÷\";\n      break;\n    default:\n      break;\n  }\n  return op;\n};\n","import React, { Component } from \"react\";\nimport { getTitle } from \"./utility\";\nimport { Col, Row } from \"react-bootstrap\";\n\nexport default class TableHead extends Component {\n  render() {\n    const { scope, howMany, class01, name, time, type, title } = this.props;\n    return (\n      <thead>\n        <tr>\n          <th colSpan={4} className=\"text-center large-font\">\n            {getTitle(scope, type, title, howMany)}\n          </th>\n        </tr>\n        <tr>\n          <th colSpan={4}>\n            <Row>\n              <Col>姓名：{name ? name : \"__________\"}</Col>\n              <Col>\n                班级：\n                {class01 ? class01 : \"__________\"}\n              </Col>\n              <Col>日期：__________</Col>\n              <Col>\n                用时：\n                {time ? `${time}分钟` : \"__________\"}\n              </Col>\n            </Row>\n          </th>\n        </tr>\n      </thead>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Select from \"react-select\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { Card, Button, Form, Col, Table } from \"react-bootstrap\";\nimport { OPTIONS_TYPE } from \"./utility\";\nimport TableHead from \"./TableHead\";\n\nconst schema = yup.object({\n  type: yup\n    .array()\n    .min(1, \"至少选择一项\")\n    .of(\n      yup\n        .object()\n        .shape({\n          label: yup.string(),\n          value: yup.string(),\n        })\n        .nullable()\n    ),\n\n  scope: yup.number().positive().integer().required(\"必填\"),\n  howMany: yup.number().positive().integer().lessThan(1001).required(\"必填\"),\n  copy: yup.number().positive().integer().lessThan(1001).required(\"必填\"),\n  name: yup.string().max(10, \"长度须小于10个字符\"),\n  class01: yup.string().max(10, \"长度须小于10个字符\"),\n  time: yup.number(),\n  title: yup.string().max(50, \"长度须小于50个字符\"),\n});\n\nexport default class FormParam extends PureComponent {\n  onClickPrint = () => {\n    window.print();\n  };\n\n  onClickSaveParams = (values) => {\n    const { scope, howMany, type, class01, name, time, copy, title } = values;\n\n    localStorage.setItem(\"type\", JSON.stringify(type));\n    localStorage.setItem(\"scope\", scope);\n    localStorage.setItem(\"howMany\", howMany);\n    localStorage.setItem(\"copy\", copy);\n    localStorage.setItem(\"name\", name);\n    localStorage.setItem(\"class01\", class01);\n    localStorage.setItem(\"time\", time);\n    localStorage.setItem(\"title\", title);\n  };\n\n  render() {\n    const {\n      type,\n      scope,\n      howMany,\n      copy,\n      name,\n      class01,\n      time,\n      title,\n      onClickCreate,\n    } = this.props;\n\n    return (\n      <Card className=\"no-print\">\n        <Card.Header className=\"text-center large-font\">\n          口算练习题在线生成工具\n        </Card.Header>\n        <Card.Body>\n          <Formik\n            validationSchema={schema}\n            onSubmit={(values, { setSubmitting }) => {\n              onClickCreate(values);\n              setSubmitting(false);\n            }}\n            initialValues={{\n              type,\n              scope,\n              howMany,\n              copy,\n              name,\n              class01,\n              time,\n              title,\n            }}\n          >\n            {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              values,\n              touched,\n              isValid,\n              errors,\n              setFieldValue,\n            }) => (\n              <>\n                <Form onSubmit={handleSubmit}>\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formtype\" md={3}>\n                      <Form.Label>题型*</Form.Label>\n                      <Select\n                        options={OPTIONS_TYPE}\n                        onChange={(value) => {\n                          setFieldValue(\"type\", value);\n                        }}\n                        name=\"type\"\n                        className={\n                          !values.type || !!errors.type ? \"is-invalid\" : null\n                        }\n                        isMulti\n                        value={values.type}\n                        error={errors.type}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.type}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formScope\" md={3}>\n                      <Form.Label>范围*: {values.scope}以内</Form.Label>\n                      <Form.Control\n                        value={values.scope}\n                        name=\"scope\"\n                        onChange={handleChange}\n                        isInvalid={!!errors.scope}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.scope}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formHowMany\" md={3}>\n                      <Form.Label>题数*</Form.Label>\n                      <Form.Control\n                        value={values.howMany}\n                        name=\"howMany\"\n                        onChange={handleChange}\n                        isInvalid={!!errors.howMany}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.howMany}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formCopy\" md={3}>\n                      <Form.Label>份数*</Form.Label>\n                      <Form.Control\n                        value={values.copy}\n                        name=\"copy\"\n                        onChange={handleChange}\n                        isInvalid={!!errors.copy}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.copy}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Form.Row>\n                  <Form.Row className=\"d-none d-md-flex\">\n                    <Form.Group as={Col} controlId=\"formName\" md={3}>\n                      <Form.Label>姓名</Form.Label>\n                      <Form.Control\n                        value={values.name}\n                        onChange={handleChange}\n                        name=\"name\"\n                        isInvalid={!!errors.name}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.name}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formClass\" md={3}>\n                      <Form.Label>班级</Form.Label>\n                      <Form.Control\n                        value={values.class01}\n                        name=\"class01\"\n                        onChange={handleChange}\n                        isInvalid={!!errors.class01}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.class01}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formTime\" md={3}>\n                      <Form.Label>时间（分钟）</Form.Label>\n                      <Form.Control\n                        value={values.time}\n                        name=\"time\"\n                        onChange={handleChange}\n                        isInvalid={!!errors.time}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.time}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formTitle\" md={3}>\n                      <Form.Label>标题</Form.Label>\n                      <Form.Control\n                        value={values.title}\n                        name=\"title\"\n                        onChange={handleChange}\n                        isInvalid={!!errors.title}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.title}\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  </Form.Row>\n                  <Card className=\"d-none d-xl-flex\">\n                    <Card.Header>页眉预览</Card.Header>\n                    <Card.Body>\n                      <Table>\n                        <TableHead\n                          type={values.type}\n                          scope={values.scope}\n                          howMany={values.howMany}\n                          name={values.name}\n                          class01={values.class01}\n                          time={values.time}\n                          title={values.title}\n                        />\n                      </Table>\n                    </Card.Body>\n                  </Card>\n                  <div className=\"mb-2\">\n                    <Button\n                      variant=\"primary\"\n                      size=\"lg\"\n                      onClick={() => this.onClickSaveParams(values)}\n                      disabled={!isValid}\n                      className=\"d-none d-md-inline\"\n                    >\n                      保存参数\n                    </Button>{\" \"}\n                    <Button\n                      variant=\"primary\"\n                      size=\"lg\"\n                      type=\"submit\"\n                      disabled={!isValid}\n                    >\n                      生成习题\n                    </Button>{\" \"}\n                    <Button\n                      variant=\"primary\"\n                      size=\"lg\"\n                      onClick={this.onClickPrint}\n                      disabled={!isValid}\n                    >\n                      打印\n                    </Button>\n                  </div>\n                </Form>\n              </>\n            )}\n          </Formik>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { getOp } from \"./utility\";\n\nexport default class TableBody extends Component {\n  getTd = (obj01, key) => {\n    if (!obj01) return null;\n\n    return (\n      <td key={`key-${key}`}>\n        {obj01.a} {getOp(obj01.op1)} {obj01.b}{\" \"}\n        {obj01.op2 ? `${getOp(obj01.op2)} ${obj01.c}` : \"\"}\n        {\" =\"}\n      </td>\n    );\n  };\n\n  getTableContent = (exercises) => {\n    const { howMany } = this.props;\n    const res = [];\n    let tr01 = [];\n    for (let i = 1; i < parseInt(howMany) + 1; i++) {\n      tr01.push(this.getTd(exercises[i - 1], i - 1));\n      if (i % 4 === 0) {\n        res.push(\n          <tr className=\"medium-font-1\" key={`key-tr-${i / 5}`}>\n            {tr01}\n          </tr>\n        );\n        tr01 = [];\n      }\n    }\n    if (tr01.length > 0)\n      res.push(\n        <tr className=\"medium-font-1\" key={`key-tr-last`}>\n          {tr01}\n        </tr>\n      );\n    return res;\n  };\n\n  render() {\n    const { exercises } = this.props;\n\n    return <tbody>{this.getTableContent(exercises)}</tbody>;\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Card, Table } from \"react-bootstrap\";\nimport { OPTIONS_TYPE, createExercises, getTypeFunc } from \"./utility\";\nimport FormParam from \"./FormParam\";\nimport TableHead from \"./TableHead\";\nimport TableBody from \"./TableBody\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      arrayExercises: [],\n      type: JSON.parse(localStorage.getItem(\"type\")) || [OPTIONS_TYPE[0]],\n      scope: parseInt(localStorage.getItem(\"scope\")) || 100,\n      howMany: parseInt(localStorage.getItem(\"howMany\")) || 100,\n      copy: parseInt(localStorage.getItem(\"copy\")) || 3,\n      name: localStorage.getItem(\"name\") || \"\",\n      class01: localStorage.getItem(\"class01\") || \"\",\n      time: parseInt(localStorage.getItem(\"time\")) || \"\",\n      title: localStorage.getItem(\"title\") || \"\",\n    };\n  }\n\n  onClickCreate = (values) => {\n    const { type, scope, howMany, copy, name, class01, time, title } = values;\n\n    // set state\n    this.setState({\n      type,\n      scope,\n      howMany,\n      copy,\n      name,\n      class01,\n      time,\n      title,\n    });\n\n    let noType = type.length;\n    let noEachType = Math.floor(parseInt(howMany) / noType);\n\n    // how many for each type\n    const arrayNoType = [];\n    for (let i = 0; i < noType; i++) {\n      arrayNoType.push(noEachType);\n    }\n    const remainder = parseInt(howMany) / noType;\n\n    for (let i = 0; i < remainder; i++) {\n      arrayNoType[i] = arrayNoType[i] + 1;\n    }\n\n    let arrayExercises00 = [];\n\n    for (let page = 0; page < parseInt(copy); page++) {\n      let arrayExercises01 = [];\n      for (let i = 0; i < noType; i++) {\n        let arrayExercises02 = createExercises(\n          arrayNoType[i],\n          parseInt(scope),\n          getTypeFunc(type[i].value)\n        );\n        arrayExercises01 = arrayExercises01.concat(arrayExercises02);\n      }\n      arrayExercises00.push(arrayExercises01);\n    }\n\n    this.setState({\n      arrayExercises: arrayExercises00,\n    });\n  };\n\n  render() {\n    const {\n      arrayExercises,\n      type,\n      scope,\n      howMany,\n      copy,\n      name,\n      class01,\n      time,\n      title,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Container>\n          <FormParam\n            type={type}\n            scope={scope}\n            howMany={howMany}\n            copy={copy}\n            name={name}\n            class01={class01}\n            time={time}\n            title={title}\n            onClickCreate={this.onClickCreate}\n          />\n\n          <Card id=\"printme\">\n            <Card.Header className=\"no-print\"></Card.Header>\n            <Card.Body>\n              {arrayExercises.length > 0\n                ? arrayExercises.map((exercises) => (\n                    <Table responsive>\n                      <TableHead\n                        type={type}\n                        scope={scope}\n                        howMany={howMany}\n                        name={name}\n                        class01={class01}\n                        time={time}\n                        title={title}\n                      />\n                      <TableBody exercises={exercises} howMany={howMany} />\n                    </Table>\n                  ))\n                : null}\n            </Card.Body>\n          </Card>\n        </Container>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}