{"version":3,"sources":["utility.js","FormParam.jsx","ContentPrint.jsx","App.js","serviceWorker.js","index.js"],"names":["getRandomInt","max","min","res","Math","floor","random","getTwoNumbers","op1","sum01","a","b","getTwoNumbersPlus","getTwoNumbersMinus","OPTIONS_TYPE","value","label","createExercises","noPerPage","numMax","funcExercise","tableContent01","i","push","getTypeFunc","type01","func01","FormParam","onClickPrint","window","print","this","props","scope","howMany","type","class01","name","time","copy","changeInput","handleOnChange","onClickCreate","onClickSaveParams","Card","className","Header","Body","Form","Row","Group","as","Col","controlId","Label","Control","onChange","e","placeholder","options","isMulti","Button","variant","size","onClick","PureComponent","ContentPrint","getTd","obj01","key","thead","colSpan","getTableContent","exercises","tr01","parseInt","length","arrayExercises","id","map","item","Table","responsive","App","state","noType","noEachType","arrayExercises00","page","arrayExercises01","arrayExercises02","concat","setState","target","localStorage","setItem","JSON","stringify","newValue","getItem","parse","Container","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.877531ac.chunk.js","sourcesContent":["// return an integer less than max + 1\nexport function getRandomInt(max, min = 1) {\n  if (max < min) return null;\n  if (max === min) return max;\n  let res = Math.floor(Math.random() * Math.floor(max) + 1);\n  if (res < min) {\n    res = getRandomInt(max, min);\n  }\n\n  return res;\n}\n\n// retrun {a: 5, b: 10, op1: 1 or 2]\nexport function getTwoNumbers(max) {\n  const op1 = getRandomInt(2);\n  const sum01 = getRandomInt(max, 20);\n  const a = getRandomInt(sum01 - 1);\n  const b = sum01 - a;\n\n  if (b < 10) {\n    return getTwoNumbers(max);\n  }\n\n  if (op1 === 1) {\n    return {\n      a,\n      b,\n      op1,\n    };\n  } else {\n    return {\n      a: sum01,\n      b,\n      op1,\n    };\n  }\n}\n\n// retrun {a: 5, b: 10, op1: 1]\nexport function getTwoNumbersPlus(max) {\n  const op1 = 1;\n  const sum01 = getRandomInt(max, 20);\n  const a = getRandomInt(sum01 - 1);\n  const b = sum01 - a;\n\n  if (max > 20 && b < 10) {\n    return getTwoNumbersPlus(max);\n  }\n\n  return {\n    a,\n    b,\n    op1,\n  };\n}\n\n// retrun {a: 5, b: 10, op1: 2]\nexport function getTwoNumbersMinus(max) {\n  const op1 = 2;\n  const sum01 = getRandomInt(max, 20);\n  const a = getRandomInt(sum01 - 1);\n  const b = sum01 - a;\n\n  if (max > 20 && b < 10) {\n    return getTwoNumbersMinus(max);\n  }\n\n  return {\n    a: sum01,\n    b,\n    op1,\n  };\n}\n\nexport const OPTIONS_TYPE = [\n  { value: \"1\", label: \"加法\" },\n  { value: \"2\", label: \"减法\" },\n  { value: \"3\", label: \"连加\" },\n  { value: \"4\", label: \"连减\" },\n  { value: \"5\", label: \"加减混合\" },\n];\n\nexport const createExercises = (noPerPage, numMax, funcExercise) => {\n  let tableContent01 = [];\n  // exercise loop\n  for (let i = 0; i < noPerPage; i++) {\n    tableContent01.push(funcExercise(numMax));\n  }\n\n  return tableContent01;\n};\n\nexport const getTypeFunc = (type01) => {\n  let func01;\n  switch (type01) {\n    case \"1\": {\n      func01 = getTwoNumbersPlus;\n      break;\n    }\n    case \"2\": {\n      func01 = getTwoNumbersMinus;\n      break;\n    }\n    default: {\n      func01 = getTwoNumbers;\n      break;\n    }\n  }\n  return func01;\n};\n","import React, { PureComponent } from \"react\";\nimport Select from \"react-select\";\nimport { Card, Button, Form, Col } from \"react-bootstrap\";\nimport { OPTIONS_TYPE } from \"./utility\";\n\nexport default class FormParam extends PureComponent {\n  onClickPrint = () => {\n    window.print();\n  };\n\n  render() {\n    const {\n      scope,\n      howMany,\n      type,\n      class01,\n      name,\n      time,\n      copy,\n      changeInput,\n      handleOnChange,\n      onClickCreate,\n      onClickSaveParams,\n    } = this.props;\n\n    return (\n      <Card className=\"no-print\">\n        <Card.Header className=\"text-center large-font\">\n          口算练习题在线生成工具\n        </Card.Header>\n        <Card.Body>\n          <Form>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formScope\">\n                <Form.Label>范围: {scope}以内</Form.Label>\n                <Form.Control\n                  value={scope}\n                  onChange={(e) => changeInput(e, \"scope\")}\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formHowMany\">\n                <Form.Label>题数</Form.Label>\n                <Form.Control\n                  placeholder=\"100\"\n                  value={howMany}\n                  onChange={(e) => changeInput(e, \"howMany\")}\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formtype\">\n                <Form.Label>题型</Form.Label>\n                <Select\n                  options={OPTIONS_TYPE}\n                  onChange={handleOnChange}\n                  name=\"type\"\n                  isMulti\n                  value={type}\n                />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formName\">\n                <Form.Label>姓名</Form.Label>\n                <Form.Control\n                  value={name}\n                  onChange={(e) => changeInput(e, \"name\")}\n                />\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"formClass\">\n                <Form.Label>班级</Form.Label>\n                <Form.Control\n                  value={class01}\n                  onChange={(e) => changeInput(e, \"class01\")}\n                />\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"formTime\">\n                <Form.Label>时间（分钟）</Form.Label>\n                <Form.Control\n                  value={time}\n                  onChange={(e) => changeInput(e, \"time\")}\n                />\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"formCopy\">\n                <Form.Label>份数</Form.Label>\n                <Form.Control\n                  value={copy}\n                  onChange={(e) => changeInput(e, \"copy\")}\n                />\n              </Form.Group>\n            </Form.Row>\n          </Form>\n          <div className=\"mb-2\">\n            <Button\n              variant=\"primary\"\n              size=\"lg\"\n              onClick={() => onClickSaveParams()}\n            >\n              保存参数\n            </Button>{\" \"}\n            <Button variant=\"primary\" size=\"lg\" onClick={() => onClickCreate()}>\n              生成习题\n            </Button>{\" \"}\n            <Button variant=\"primary\" size=\"lg\" onClick={this.onClickPrint}>\n              打印\n            </Button>\n          </div>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport { Card, Table } from \"react-bootstrap\";\n\nexport default class ContentPrint extends PureComponent {\n  getTd = (obj01, key) => {\n    if (!obj01) return null;\n    return (\n      <td key={`key-${key}`}>\n        {obj01.a} {obj01.op1 === 1 ? \"+\" : \"-\"} {obj01.b}\n        {\" =\"}\n      </td>\n    );\n  };\n\n  thead = () => {\n    const { scope, howMany, class01, name, time } = this.props;\n    return (\n      <thead>\n        <tr>\n          <th colSpan={5} className=\"text-center large-font\">\n            {scope}以内加减法口算练习题\n          </th>\n        </tr>\n        <tr className=\"medium-font-1\">\n          <th>姓名：{name ? name : \"____________\"}</th>\n          <th>\n            班级：\n            {class01 ? class01 : \"____________\"}\n          </th>\n          <th>20___年___月___日</th>\n          <th>\n            用时：\n            {time ? time : \"______\"} 分钟\n          </th>\n          <th>做对：_____/{howMany} 题</th>\n        </tr>\n      </thead>\n    );\n  };\n\n  getTableContent = (exercises) => {\n    const { howMany } = this.props;\n    const res = [];\n    let tr01 = [];\n    for (let i = 1; i < parseInt(howMany) + 1; i++) {\n      tr01.push(this.getTd(exercises[i - 1], i - 1));\n      if (i % 5 === 0) {\n        res.push(\n          <tr className=\"medium-font-2\" key={`key-tr-${i / 5}`}>\n            {tr01}\n          </tr>\n        );\n        tr01 = [];\n      }\n    }\n    if (tr01.length > 0)\n      res.push(\n        <tr className=\"medium-font-2\" key={`key-tr-last`}>\n          {tr01}\n        </tr>\n      );\n    return res;\n  };\n\n  render() {\n    const { arrayExercises } = this.props;\n\n    return (\n      <Card id=\"printme\">\n        <Card.Header></Card.Header>\n        <Card.Body>\n          {arrayExercises.map((item) => (\n            <Table responsive>\n              {this.thead()}\n              <tbody>{this.getTableContent(item)}</tbody>\n            </Table>\n          ))}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container } from \"react-bootstrap\";\nimport { OPTIONS_TYPE, createExercises, getTypeFunc } from \"./utility\";\nimport FormParam from \"./FormParam\";\nimport ContentPrint from \"./ContentPrint\";\nimport * as R from \"ramda\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      arrayExercises: [],\n      scope: localStorage.getItem(\"scope\") || 100,\n      howMany: localStorage.getItem(\"howMany\") || 100,\n      type: JSON.parse(localStorage.getItem(\"type\")) || [\n        OPTIONS_TYPE[0],\n        OPTIONS_TYPE[1],\n      ],\n      class01: localStorage.getItem(\"class01\") || \"\",\n      name: localStorage.getItem(\"name\") || \"\",\n      time: localStorage.getItem(\"time\") || 5,\n      copy: localStorage.getItem(\"copy\") || 3,\n    };\n  }\n\n  onClickCreate = () => {\n    const { howMany, scope, copy, type } = this.state;\n    let noType = type.length;\n    let noEachType = Math.floor(parseInt(howMany) / noType);\n    let arrayExercises00 = [];\n\n    for (let page = 0; page < parseInt(copy); page++) {\n      let arrayExercises01 = [];\n      for (let i = 0; i < noType; i++) {\n        let arrayExercises02 = createExercises(\n          noEachType,\n          scope,\n          getTypeFunc(type[i].value)\n        );\n        arrayExercises01 = arrayExercises01.concat(arrayExercises02);\n      }\n      arrayExercises00.push(arrayExercises01);\n    }\n\n    this.setState({\n      arrayExercises: arrayExercises00,\n    });\n  };\n\n  changeInput = (e, name) => {\n    this.setState({\n      [name]: e.target.value,\n    });\n  };\n\n  onClickSaveParams = () => {\n    const { scope, howMany, type, class01, name, time, copy } = this.state;\n\n    localStorage.setItem(\"scope\", scope);\n    localStorage.setItem(\"howMany\", howMany);\n    localStorage.setItem(\"type\", JSON.stringify(type));\n    localStorage.setItem(\"class01\", class01);\n    localStorage.setItem(\"name\", name);\n    localStorage.setItem(\"time\", time);\n    localStorage.setItem(\"copy\", copy);\n  };\n\n  handleOnChange = (newValue) => {\n    this.setState({\n      type: newValue,\n    });\n  };\n\n  render() {\n    const {\n      scope,\n      howMany,\n      class01,\n      name,\n      type,\n      time,\n      arrayExercises,\n      copy,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Container>\n          <FormParam\n            scope={scope}\n            howMany={howMany}\n            class01={class01}\n            name={name}\n            time={time}\n            type={type}\n            copy={copy}\n            changeInput={this.changeInput}\n            onClickSaveParams={this.onClickSaveParams}\n            handleOnChange={this.handleOnChange}\n            onClickCreate={this.onClickCreate}\n          />\n          <ContentPrint\n            scope={scope}\n            howMany={howMany}\n            class01={class01}\n            name={name}\n            time={time}\n            arrayExercises={arrayExercises}\n            copy={copy}\n          />\n        </Container>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}